{"version":3,"sources":["Bank/Global.js","Bank/Modal/styled.js","Bank/Modal/index.jsx","Bank/enums.js","Bank/Shared/Layout.jsx","Bank/ActivityChooser/ActivityListing.jsx","Bank/ActivityChooser/index.jsx","Bank/Shared/Tip/index.jsx","Bank/introOutroCopy.js","Bank/IntroOutro/index.jsx","Bank/Shared/BankPages.jsx","Bank/Activities/SignIn/TipSteps.jsx","Bank/Activities/SignIn/index.jsx","Bank/Activities/AccountOverview/Checking.jsx","Bank/Shared/AllAccounts.jsx","Bank/Activities/AccountOverview/index.jsx","Bank/Activities/MakingPayments/PaymentMethods.jsx","Bank/Activities/MakingPayments/AddVerifyPayee.jsx","Bank/Activities/MakingPayments/PayVerifyBill.jsx","Bank/Activities/MakingPayments/index.jsx","Bank/Activities/index.js","Bank/index.jsx","serviceWorker.js","index.js","Bank/assets/dark_flake.png","Bank/assets/dark_flake_black.png","Bank/assets/contract.png","Bank/assets/piggy-bank.png","Bank/assets/exchange.png","Bank/assets/coin.png"],"names":["bps","mq","map","bp","mqMin","mqO","facepaint","theme","colors","ylc_blue","bank_blue","text","light_accent","medium_accent","lighter_grey","medium_grey","faded_text","zIndex","first","second","third","fourth","top","fonts","big_header","css","fontSize","medium_header","small_header","extra_small_header","body_text","body_text_bold","small_body_text","large_button_text","small_button_text","StyledModalOverlay","styled","div","ModalWrapper","p","props","visible","fullScreen","floating","ContentContainer","ResponsiveContent","children","ModalOverlay","notOverlayCloseable","closeModal","console","log","render","onClick","activitiesEnums","SIGNIN","ACCOUNTOVERVIEW","MAKINGPAYMENTS","PageContainer","MarginedContainer","ActButton","button","disabled","SignInButton","background","color","ActSectionHeader","h2","ActWrapper","ActTitle","span","activity","setCurrentActivity","Activity","title","ActivityList","ActChooserBody","Welcome","Intro","IntroContent","BlueSpan","Choose","LogoContainer","HeaderLogo","img","ActivityChooser","ActivityHeader","src","logo","alt","ContentSpan","PlacedElement","BasicTooltip","content","showTip","triggerOffset","staticOnly","preferX","placement","noScroll","useHover","isOver","hoverProps","useEffect","scroller","scrollTo","smooth","offset","useLayer","isOpen","delayEnter","delayLeave","auto","containerOffset","arrowOffset","triggerProps","layerProps","arrowProps","renderLayer","id","name","initial","opacity","animate","exit","className","style","borderWidth","borderColor","borderStyle","backgroundColor","borderRadius","padding","maxWidth","roundness","size","angle","ButtonContainer","BasicTipButton","InfoTip","tipContent","tipTarget","showButton","setStep","step","allSteps","buttonDisabled","rest","infoTipProps","Content","undefined","intro","outro","IntroOutroContainer","TextSection","ButtonSection","IntroOutro","currentActivity","isIntro","endExercise","copy","introOutroCopy","Space","BoldDiv","Logo","BankingBackgroundContainer","BankingColor","BankingBackground","BankLogoDiv","left","LogoImg","LogoTagWrapper","BankingLogo","NewStyle","blackLogo","TagContainer","BankingTag","ColoredDiv","HeaderWrapper","BankingHeader","SignInContainer","CleanBackground","BankingContainer","StyledBankingFooter","FooterLink","isActive","BankingFooter","paymentsClick","clickPayments","TransDetailsSection","TransButton","TransactionsDetails","transactionsClick","detailsClick","transactionsDisabled","detailsDisabled","transactionsActive","detailsActive","transactions","accountInfo","ItemListingWrapper","isSummary","ItemTextContainer","ItemPrincipalText","ItemSubTextContainer","ItemDate","ItemTransaction","ItemDetails","isPositive","ItemListing","principal","date","trans","details","BillPayeeTitle","BillPayeeInput","input","BillPayeeReview","ContinueButton","ContinueButtonContainer","FirstStep","SecondStep","cardNumber","ThirdStep","password","FourthStep","setIsIntro","setIntroOutroVisible","saveToggled","StyledSignInWrapper","StyledGreeting","InputContainer","StyledNumberFormat","NumberFormat","StyledInput","PasswordLabel","label","RadioInputContainer","SignIn","endCurrentActivity","useState","readyToSign","setReadyToSign","introOutroVisible","setCardNumber","setPassword","setSaveToggled","PreSignIn","onChange","e","target","value","format","placeholder","type","checked","CheckingHeader","AccountNumber","NotedBalance","Balance","balance","BalanceContent","CheckingHeaderContainer","CheckingSectionWrapper","FullEmptyDiv","Checking","wellRead","taco","internetDeposit","preAuth","totalDebits","credits","creditsDebits","hold","overdraft","available","institution","transit","accountNumber","setCheckingService","checkingTransactions","checkingInformation","checkingService","CheckingHeaderInfo","Transactions","AccountInformation","StyledAccountBlock","AccountInfo","BankAccounts","AccountTitle","AccountBalance","TransferContainer","AllAccountsContainer","AccountBlock","accNumber","AllAccounts","check","setIsChecking","Overview","isChecking","length","PaymentMethods","setPaymentMethodsVisible","setMainPage","billPaymentsStep","billPaymentsPage","AddVerifyPayee","isVerifyPayee","setTacoAdded","setPaymentStage","companyTitle","TacoTitle","setCompanyTitle","setVerifyPayee","inputedAccountNumber","setInputedAccountNumber","payeesStage","confirmPayee","addCompanyName","addBillNumber","goToVerify","it","role","aria-label","StyledDatePicker","DatePicker","StyledSelect","select","DateContainer","LightOption","option","PayVerifyBill","isVerifyBill","setVerifyBill","setAccountType","setBillAmount","setBillDate","accountType","billAmount","billDate","confirmBillPayment","chooseDebitAccount","enterAmount","enterDate","reviewBillPayment","Date","toLocaleDateString","split","month","day","year","todayDate","bMonth","bDay","bYear","formattedBillDate","prefix","selected","todayButton","PayeeControlsContainer","ChooseText","AddPayeeButton","ListOfPayees","addVerifyPayeeStage","tacoAdded","payVerifyBillStage","BillPaymentsContainer","BillPayments","paymentStage","MakingPayments","payTabActive","setPayTabActive","mainPage","paymentMethodsVisible","days","result","setDate","getDate","addDays","AccountOverview","AllActivitiesButton","App","activitiesListVisible","setActivitiesListVisible","Object","values","some","act","Act","AllActivities","GlobalStyle","createGlobalStyle","AppExport","Boolean","window","location","hostname","match","ReactDOM","StrictMode","Bank","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.93e2f8af.chunk.js","sourcesContent":["import { css } from \"styled-components\";\nimport facepaint from \"facepaint\";\n\nexport const bps = [\"400\", \"600\", \"800\", \"1060\"];\n\nexport const mq = bps.map((bp) => `@media (max-width: ${bp}px)`);\nexport const mqMin = bps.map((bp) => `@media (min-width: ${bp}px)`);\n\nexport const mqO = facepaint([\n  `@media(max-width: ${bps[3]}px)`,\n  `@media(max-width: ${bps[2]}px)`,\n  `@media(max-width: ${bps[1]}px)`,\n  `@media(max-width: ${bps[0]}px)`,\n]);\n\nexport const mqNew = (bp) => `@media (max-width: ${bp}px)`;\n\nexport const theme = {\n  colors: {\n    ylc_blue: \"#2F3575\",\n    bank_blue: \"#2E71B2\",\n    text: \"#02111B\",\n    light_accent: \"#EBF2FA\",\n    medium_accent: \"#B4CDED\",\n    lighter_grey: \"#FDFDFD\",\n    medium_grey: \"#EFEFEF\",\n    faded_text: \"#B3B7BA\",\n  },\n  zIndex: {\n    first: 10,\n    second: 20,\n    third: 30,\n    fourth: 40,\n    top: 50,\n  },\n  fonts: {\n    big_header: css`\n      font-family: Poppins;\n      font-weight: bolder;\n      ${mqO({\n        fontSize: [\"75px\", null, \"60px\", \"40px\", null],\n      })}\n    `,\n    medium_header: css`\n      font-family: Poppins;\n      font-weight: bold;\n      ${mqO({\n        fontSize: [\"36px\", null, null, \"25px\", null],\n      })}\n    `,\n    small_header: css`\n      font-size: 24px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n    extra_small_header: css`\n      font-size: 20px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n    body_text: css`\n      font-size: 16px;\n      font-family: Noto Sans;\n      ${mq[2]} {\n        font-size: 14px;\n      }\n    `,\n    body_text_bold: css`\n      font-size: 16px;\n      font-family: Noto Sans;\n      font-weight: bold;\n      ${mq[2]} {\n        font-size: 14px;\n      }\n    `,\n    small_body_text: css`\n      font-size: 12px;\n      font-family: Noto Sans;\n      ${mq[2]} {\n        font-size: 10px;\n      }\n    `,\n    large_button_text: css`\n      font-size: 14px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n    small_button_text: css`\n      font-size: 12px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n  },\n};\n","import styled, { css } from \"styled-components\";\nimport { mqMin } from \"../Global\";\n\nexport const StyledModalOverlay = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  z-index: -1;\n`;\nexport const ModalWrapper = styled.div`\n  height: 100vh;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: ${(p) => (p.zIndex ? p.zIndex : 100000)};\n  display: ${(props) => (props.visible ? \"flex\" : \"none\")};\n  justify-content: center;\n  align-items: center;\n`;\n\nconst fullScreen = css`\n  width: 100vw;\n  height: 100vh;\n  overflow-y: auto;\n  background: white;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst floating = css`\n  width: calc(100% - 10rem);\n  max-width: 64rem;\n  height: unset;\n  max-height: calc(100% - 10rem);\n  /* max-height: 71rem; */\n  position: relative;\n  overflow-y: auto;\n  background: white;\n  box-shadow: 0 2px 24px 0 rgba(0, 0, 0, 0.5);\n  border: ${(p) => p.theme.colors.ylc_blue} solid 3px;\n  border-radius: 5px;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContentContainer = styled.div`\n  ${fullScreen}\n  ${mqMin[2]} {\n    ${floating}\n  }\n`;\n","import React from \"react\";\nimport { ContentContainer, StyledModalOverlay, ModalWrapper } from \"./styled\";\n\nexport const ResponsiveContent = ({ children }) => (\n  <ContentContainer>{children}</ContentContainer>\n);\n\nexport const ModalOverlay = (props) => {\n  const { notOverlayCloseable, visible, closeModal } = props;\n\n  const handleOverlayClick = () => {\n    if (!notOverlayCloseable) {\n      closeModal();\n    }\n  };\n  console.log({ props });\n\n  return (\n    <ModalWrapper {...props} visible={visible}>\n      {props.render({ ...props })}\n      <StyledModalOverlay onClick={handleOverlayClick} />\n    </ModalWrapper>\n  );\n};\n","export const activitiesEnums = {\n  SIGNIN: \"SignIn\",\n  ACCOUNTOVERVIEW: \"AccountOverview\",\n  MAKINGPAYMENTS: \"MakingPayments\",\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { bps } from \"../Global\";\n\nexport const PageContainer = styled.div``;\n\nexport const MarginedContainer = styled.div`\n  max-width: ${bps[3]}px;\n  margin: 0 auto;\n  /* padding: 0 10px; */\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 20px;\n`;\n\nexport const ActButton = styled.button`\n  background: ${(p) => (p.disabled ? \"grey\" : p.theme.colors.ylc_blue)};\n  color: white;\n  min-width: 70px;\n  min-height: 40px;\n  border-radius: 5px;\n  ${(p) => p.theme.fonts.body_text_bold}\n  cursor: pointer;\n`;\n\nexport const SignInButton = styled.button`\n  background-color: ${(p) => p.background || \"white\"};\n  color: ${(p) => p.color || p.theme.colors.ylc_blue};\n  width: 240px;\n  height: 80px;\n  border-radius: 100px;\n  ${(p) => p.theme.fonts.small_header}\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { activitiesEnums } from \"../enums\";\nimport { ActButton as ActButtonImport } from \"../Shared/Layout\";\n\nconst ActSectionHeader = styled.h2`\n  ${(p) => p.theme.fonts.small_header}\n  padding: 20px 0 20px 90px;\n`;\n\nconst ActWrapper = styled.div`\n  background: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 90px;\n  padding-right: 90px;\n  height: 86px;\n`;\n\nconst ActTitle = styled.span`\n  font-size: 18px;\n`;\n\nconst ActButton = ({ activity, children, closeModal, setCurrentActivity }) => (\n  <ActButtonImport\n    onClick={() => {\n      setCurrentActivity(activity);\n      closeModal();\n    }}\n  >\n    {children}\n  </ActButtonImport>\n);\n\nconst Activity = ({ closeModal, setCurrentActivity, activity, title }) => (\n  <ActWrapper>\n    <ActTitle>{title}</ActTitle>\n    <ActButton {...{ closeModal, setCurrentActivity, activity }}>\n      Start\n    </ActButton>\n  </ActWrapper>\n);\n\nexport const ActivityList = ({ closeModal, setCurrentActivity }) => {\n  return (\n    <>\n      <ActSectionHeader>Accessing Your Account</ActSectionHeader>\n      <Activity\n        title={\"Signing In\"}\n        activity={activitiesEnums.SIGNIN}\n        {...{ closeModal, setCurrentActivity }}\n      />\n      <ActSectionHeader>Accounts</ActSectionHeader>\n      <Activity\n        title={\"Online Account Overview\"}\n        activity={activitiesEnums.ACCOUNTOVERVIEW}\n        {...{ closeModal, setCurrentActivity }}\n      />\n      <ActSectionHeader>Making Payments</ActSectionHeader>\n      <Activity\n        title={\"Pay a new company for the first time\"}\n        activity={activitiesEnums.MAKINGPAYMENTS}\n        {...{ closeModal, setCurrentActivity }}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { ModalOverlay, ResponsiveContent } from \"../Modal\";\nimport styled from \"styled-components\";\nimport { ActivityList } from \"./ActivityListing\";\nimport logo from \"../assets/dark_flake.png\";\n\nconst ActChooserBody = styled.div`\n  /* position: relative; */\n  /* top: -160px; */\n  background: ${(p) => p.theme.colors.light_accent};\n  height: 100%;\n  padding-bottom: 20px;\n`;\n\nconst Welcome = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  display: flex;\n  justify-content: center;\n`;\n\nconst Intro = styled.div`\n  ${(p) => p.theme.fonts.body_text_bold}\n  display: flex;\n  justify-content: center;\n  padding: 5px 0;\n`;\n\nconst IntroContent = styled.div`\n  max-width: 400px;\n  text-align: center;\n`;\n\nconst BlueSpan = styled.span`\n  color: ${(p) => p.theme.colors.ylc_blue};\n  display: inline-block;\n`;\n\nconst Choose = styled.div`\n  ${(p) => p.theme.fonts.medium_header}\n  display: flex;\n  justify-content: center;\n  padding: 30px 0 20px;\n`;\n\nconst LogoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 150px;\n`;\n\nconst HeaderLogo = styled.img`\n  height: 300px;\n  position: relative;\n  top: -150px;\n  overflow: hidden;\n`;\n\nconst ActivityChooser = ({ visible, closeModal, setCurrentActivity }) => {\n  const ActivityHeader = () => (\n    <div>\n      <LogoContainer>\n        <HeaderLogo src={logo} alt=\"\" />\n      </LogoContainer>\n      <Welcome>\n        Welcome to the&nbsp;<BlueSpan>YLC Online Banking Simulator</BlueSpan>.\n      </Welcome>\n      <Intro>\n        <IntroContent>\n          Banking is challenging and here are some nice introductory words.\n          Banking is challenging and here are some nice introductory words.\n        </IntroContent>\n      </Intro>\n      <Choose>Choose an exercise</Choose>\n    </div>\n  );\n\n  return (\n    <ModalOverlay\n      visible={visible}\n      closeModal={closeModal}\n      notOverlayCloseable={true}\n      render={() => (\n        <ResponsiveContent>\n          <ActChooserBody>\n            <ActivityHeader />\n            <ActivityList {...{ closeModal, setCurrentActivity }} />\n          </ActChooserBody>\n        </ResponsiveContent>\n      )}\n    />\n  );\n};\n\nexport default ActivityChooser;\n","import React, { useEffect, useRef } from \"react\";\nimport { useLayer, useHover, Arrow } from \"react-laag\";\nimport { ActButton } from \"../../Shared/Layout\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Link,\n  Element,\n  Events,\n  animateScroll as scroll,\n  scrollSpy,\n  scroller,\n} from \"react-scroll\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\n\nconst ContentSpan = styled.span`\n  position: relative;\n`;\n\nconst PlacedElement = styled.div``;\n\nexport const BasicTooltip = ({\n  children,\n  content,\n  showTip,\n  triggerOffset,\n  staticOnly,\n  preferX,\n  placement,\n  noScroll,\n}) => {\n  const [isOver, hoverProps] = useHover();\n\n  useEffect(() => {\n    scroller.scrollTo(\"myScrollToElement\", {\n      // duration: 1500,\n      // delay: 100,\n      smooth: true,\n      // containerId: \"ContainerElementID\",\n      offset: -300, // Scrolls to element + 50 pixels down the page\n    });\n  }, []);\n\n  const { triggerProps, layerProps, arrowProps, renderLayer } = useLayer({\n    isOpen: showTip || (!staticOnly && isOver),\n    delayEnter: 100,\n    delayLeave: 100,\n    auto: true,\n    triggerOffset: triggerOffset || 20,\n    containerOffset: 10,\n    arrowOffset: 5,\n    preferX: preferX || \"right\",\n    placement: placement || \"right-center\",\n  });\n\n  return (\n    <>\n      <ContentSpan {...triggerProps} {...hoverProps}>\n        {(showTip || (!staticOnly && isOver)) && !noScroll && (\n          <>\n            <PlacedElement id=\"ContainerElementID\">\n              <Element name=\"myScrollToElement\" />\n            </PlacedElement>\n          </>\n        )}\n        {children}\n      </ContentSpan>\n      {(showTip || (!staticOnly && isOver)) &&\n        renderLayer(\n          <AnimatePresence>\n            {showTip && (\n              <motion.div\n                {...layerProps}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n              >\n                <div\n                  className=\"tooltip\"\n                  {...layerProps}\n                  style={{\n                    ...layerProps.style,\n                    // minWidth: 150,\n                    // minHeight: 100,\n                    borderWidth: 1,\n                    borderColor: \"#000000\",\n                    borderStyle: \"solid\",\n                    backgroundColor: \"white\",\n                    borderRadius: \"3px\",\n                    padding: \"20px\",\n                    maxWidth: \"250px\",\n                    // boxShadow: \"0 0 1px 1px gray\",\n                  }}\n                >\n                  {content}\n                  <Arrow\n                    {...arrowProps}\n                    backgroundColor=\"white\"\n                    borderWidth={1}\n                    borderColor=\"#000000\"\n                    roundness={0.5}\n                    size={18}\n                    angle={30}\n                  />\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        )}\n    </>\n  );\n};\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px 0 0;\n`;\n\nexport const BasicTipButton = (props) => {\n  return (\n    <ButtonContainer>\n      <ActButton {...props}>{props.children}</ActButton>\n    </ButtonContainer>\n  );\n};\n\nexport const InfoTip = ({\n  tipContent,\n  showTip,\n  tipTarget,\n  showButton = true,\n  setStep,\n  step,\n  allSteps,\n  buttonDisabled,\n  ...rest\n}) => {\n  console.log({\n    infoTipProps: {\n      tipContent,\n      showTip,\n      tipTarget,\n      showButton,\n      setStep,\n      step,\n      allSteps,\n      buttonDisabled,\n    },\n  });\n  const Content = () => {\n    return (\n      <div>\n        <div>{tipContent}</div>\n        {showButton && (\n          <BasicTipButton\n            disabled={buttonDisabled}\n            onClick={() => {\n              setStep(step + 1);\n            }}\n          >\n            Continue\n          </BasicTipButton>\n        )}\n      </div>\n    );\n  };\n  return (\n    <div>\n      <BasicTooltip\n        content={<Content />}\n        showTip={showTip ? allSteps[step] === showTip : undefined}\n        staticOnly={true}\n        {...rest}\n      >\n        {tipTarget}\n      </BasicTooltip>\n    </div>\n  );\n};\n","import { activitiesEnums } from \"./enums\";\n\nconst SignIn = {\n  intro:\n    \"When you click start from the first screen, a box comes up saying what you’ll do in this exercise. We like how this is set up. We’d like to keep this box the same info minus “and memorable information”. However, for copyright purposes, the wording would have to be changed a little.\",\n  outro:\n    \"That’s it! You’ve now signed into online banking. If you have any questions about signing into your bank account online, please contact your bank provider.\",\n};\n\nconst AccountOverview = {\n  intro:\n    \"When you click start for this activity, a box comes up saying what you’ll do in this exercise. We like how this is set up. ‘In this exercise we’ll guide you through viewing an online back account’\",\n  outro:\n    \"That’s it! You’ve now learned about the features of an online bank account. Want to learn more?\",\n};\nconst MakingPayments = {\n  intro:\n    \"In this activity, you owe Taco Electric $68.00. You're going to pay them using Online Banking. You've never paid Taco Electric online before, so first you need to set them up as a new recipient.\",\n  outro:\n    \"You now know how to add a new payee and pay a bill online. Want to learn more?\",\n};\n\nexport default {\n  [activitiesEnums.SIGNIN]: SignIn,\n  [activitiesEnums.ACCOUNTOVERVIEW]: AccountOverview,\n  [activitiesEnums.MAKINGPAYMENTS]: MakingPayments,\n};\n","import React from \"react\";\nimport { ModalOverlay, ResponsiveContent } from \"../Modal\";\nimport styled from \"styled-components\";\nimport introOutroCopy from \"../introOutroCopy\";\nimport logo from \"../assets/dark_flake.png\";\nimport { ActButton } from \"../Shared/Layout\";\n\nconst HeaderLogo = styled.img`\n  height: 300px;\n  position: absolute;\n  top: -150px;\n  right: calc(50% - 150px);\n  overflow: hidden;\n`;\n\nconst IntroOutroContainer = styled.div`\n  padding: 30px 0 20px;\n  padding-top: 150px;\n`;\n\nconst TextSection = styled.div`\n  padding: 40px 50px;\n  ${(p) => p.theme.fonts.body_text_bold}\n`;\n\nconst ButtonSection = styled.div`\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst IntroOutro = ({\n  visible,\n  closeModal,\n  currentActivity,\n  isIntro,\n  endExercise,\n  copy,\n}) => {\n  const text =\n    copy ||\n    introOutroCopy?.[currentActivity]?.[isIntro ? \"intro\" : \"outro\"] ||\n    \"copy not available\";\n  return (\n    <ModalOverlay\n      visible={visible}\n      closeModal={closeModal}\n      notOverlayCloseable={true}\n      zIndex={110}\n      render={() => (\n        <ResponsiveContent>\n          <IntroOutroContainer>\n            <HeaderLogo src={logo} />\n            <TextSection>{text}</TextSection>\n            <ButtonSection>\n              {isIntro ? (\n                <ActButton onClick={() => closeModal()}>Close</ActButton>\n              ) : (\n                <ActButton onClick={() => endExercise()}>\n                  End Exercise\n                </ActButton>\n              )}\n            </ButtonSection>\n          </IntroOutroContainer>\n        </ResponsiveContent>\n      )}\n    />\n  );\n};\n\nexport default IntroOutro;\n","import React from \"react\";\nimport logo from \"../assets/dark_flake.png\";\nimport blackLogo from \"../assets/dark_flake_black.png\";\nimport styled, { css } from \"styled-components\";\nimport { MarginedContainer } from \"./Layout\";\nimport { BasicTooltip, InfoTip } from \"./Tip\";\n\nexport const Space = styled.span`\n  width: 10px;\n  display: inline-block;\n`;\n\nexport const BoldDiv = styled.div`\n  font-weight: bold;\n  text-align: center;\n  padding: 5px 0;\n`;\n\nconst Logo = styled.img`\n  height: 150vh;\n  position: absolute;\n  top: -50vh;\n  right: calc(50% - 75vh);\n  overflow: hidden;\n  opacity: 0.5;\n  z-index: -1;\n`;\n\nconst BankingBackgroundContainer = styled.div`\n  height: 100%;\n  min-height: 100vh;\n  width: 100vw;\n  overflow-x: hidden;\n  position: relative;\n`;\n\nconst BankingColor = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background: ${(p) => p.theme.colors.bank_blue};\n  /* opacity: 0.8; */\n  z-index: -1;\n  overflow-x: hidden;\n`;\n\nexport const BankingBackground = ({ children }) => {\n  return (\n    <BankingBackgroundContainer>\n      {children}\n      <BankingColor />\n      <Logo src={logo} />\n    </BankingBackgroundContainer>\n  );\n};\n\nconst BankLogoDiv = styled.div`\n  grid-column: span 12;\n  ${(p) => p.theme.fonts.extra_small_header};\n  display: flex;\n  justify-content: ${(p) => (p.left ? \"flex-start\" : \"center\")};\n  align-items: center;\n  color: white;\n  padding: 40px 0;\n  padding-bottom: ${(p) => (p.left ? \"15px\" : \"40px\")};\n  ${(p) => console.log({ p })};\n`;\n\nconst LogoImg = styled.img`\n  height: 40px;\n  width: 40px;\n  padding-left: 5px;\n`;\n\nconst LogoTagWrapper = styled.div`\n  grid-column-start: 3;\n  grid-column-end: 11;\n  padding: 20px 0;\n  height: calc(170px - 40px);\n`;\n\nexport const BankingLogo = ({ left, NewStyle }) => (\n  <BankLogoDiv left={left}>\n    <span>Bank of YLC</span>\n    <LogoImg src={blackLogo} />\n  </BankLogoDiv>\n);\n\nconst TagContainer = styled.div`\n  grid-column: span 12;\n  color: white;\n`;\n\nexport const BankingTag = () => (\n  <TagContainer>Let us help you with your banking!</TagContainer>\n);\n\nconst ColoredDiv = styled.div`\n  height: 30px;\n  background-color: ${(p) => p.theme.colors.ylc_blue};\n  opacity: 0.7;\n`;\n\nconst HeaderWrapper = styled.div`\n  height: 200px;\n  /* display: flex; */\n  /* justify-content: space-between; */\n  /* flex-direction: column; */\n`;\n\nexport const BankingHeader = () => {\n  return (\n    <HeaderWrapper>\n      <MarginedContainer>\n        <LogoTagWrapper>\n          <BankingLogo left={true} />\n          <BankingTag />\n        </LogoTagWrapper>\n      </MarginedContainer>\n      <ColoredDiv />\n    </HeaderWrapper>\n  );\n};\n\nexport const SignInContainer = styled.div`\n  background: white;\n  grid-column-start: 4;\n  grid-column-end: 10;\n  display: flex;\n  flex-direction: column;\n  padding: 50px;\n  border-radius: 10px;\n`;\n\nexport const CleanBackground = styled.div`\n  /* background: ${(p) => p.theme.colors.light_accent}; */\n  background: rgb(242, 242, 242);\n  height: 100%;\n  /* padding-top: 15px; */\n  /* padding-bottom: 300px; */\n\n  // BASED ON THE HEADER HEIGHT\n  min-height: calc(100vh - 200px);\n  /* overflow: hidden; */\n`;\n\nexport const BankingContainer = styled.div`\n  grid-column-start: 2;\n  grid-column-end: 12;\n  /* padding: 10px; */\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  height: 100%;\n  /* padding-bottom: 200px; */\n  /* min-height: 100vh; */\n  /* overflow-y: hidden; */\n`;\n\nconst StyledBankingFooter = styled.div`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background: white;\n  height: 75px;\n`;\n\nconst FooterLink = styled.button`\n  width: 140px;\n  margin: 10px;\n  border: none;\n  background: none;\n  border-bottom: 4px solid\n    ${(p) => (p.isActive ? p.theme.colors.ylc_blue : \"transparent\")};\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: grey;\n  ${(p) => p.theme.fonts.body_text};\n  font-size: 18px;\n  cursor: pointer;\n`;\n\nexport const BankingFooter = ({\n  isActive = \"home\",\n  paymentsClick = () => {},\n  clickPayments,\n  step,\n  setStep = () => {},\n  allSteps = [],\n}) => {\n  console.log({\n    isActive,\n    paymentsClick,\n    clickPayments,\n    step,\n    setStep,\n    allSteps,\n  });\n  return (\n    <StyledBankingFooter>\n      <FooterLink isActive={isActive === \"home\"}>Home</FooterLink>\n      <InfoTip\n        tipContent={<div>Click on Pay & Transfer</div>}\n        tipTarget={\n          <FooterLink\n            onClick={() => paymentsClick()}\n            isActive={isActive === \"pay\"}\n            disabled={allSteps[step] !== clickPayments}\n          >\n            Pay & Transfer\n          </FooterLink>\n        }\n        placement={\"top\"}\n        showTip={clickPayments}\n        showButton={false}\n        noScroll={true}\n        {...{ step, setStep, allSteps }}\n      />\n\n      <FooterLink isActive={isActive === \"more\"}>More</FooterLink>\n    </StyledBankingFooter>\n  );\n};\n\nconst TransDetailsSection = styled.div`\n  background: white;\n  display: flex;\n  justify-content: center;\n  /* width: 100%; */\n  /* grid-column: span 12; */\n`;\n\nconst TransButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  padding: 10px 0;\n  color: ${(p) => (p.isActive ? \"grey\" : \"white\")};\n  background: ${(p) => (p.isActive ? \"white\" : p.theme.colors.bank_blue)};\n  cursor: pointer;\n  border: none;\n  ${(p) => p.theme.fonts.extra_small_header};\n  font-size: 16px;\n  border-radius: none;\n  /* border-bottom: 1px solid ${(p) => p.theme.colors.bank_blue}; */\n`;\n\nexport const TransactionsDetails = ({\n  transactionsClick,\n  detailsClick,\n  transactionsDisabled,\n  detailsDisabled,\n  transactionsActive,\n  detailsActive,\n  allSteps,\n  step,\n  transactions,\n  accountInfo,\n}) => {\n  return (\n    <TransDetailsSection>\n      <TransButton\n        onClick={() => transactionsClick()}\n        disabled={transactionsDisabled}\n        isActive={transactionsActive}\n      >\n        <BasicTooltip\n          content={\n            <>\n              <div>\n                Transactions represent the money being spent (debited) and the\n                money being added (credit) to your account.\n              </div>\n              {<br />}\n              <div>\n                Click here to go to Account Information. Click here to go back\n                to your transactions.\n              </div>\n            </>\n          }\n          showTip={allSteps[step] === transactions}\n          staticOnly={true}\n        >\n          Transactions\n        </BasicTooltip>\n      </TransButton>\n      <TransButton\n        onClick={() => detailsClick()}\n        disabled={detailsDisabled}\n        isActive={detailsActive}\n      >\n        <BasicTooltip\n          content={\n            \"Click here to go to Account Details to view all the details of your bank account.\"\n          }\n          showTip={allSteps[step] === accountInfo}\n          staticOnly={true}\n        >\n          Account Details\n        </BasicTooltip>\n      </TransButton>\n    </TransDetailsSection>\n  );\n};\n\nconst ItemListingWrapper = styled.div`\n  background: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: calc(100% - 60px);\n  margin: 0 30px;\n  padding: 30px 0;\n  font-size: 20px;\n  border-bottom: solid 1px ${(p) => (p.isSummary ? \"transparent\" : \"lightgray\")};\n  cursor: pointer;\n`;\n\nconst ItemTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ItemPrincipalText = styled.span`\n  font-weight: bold;\n  padding-bottom: 5px;\n  text-transform: uppercase;\n`;\n\nconst ItemSubTextContainer = styled.span`\n  ${(p) => p.theme.fonts.large_button_text};\n  font-weight: normal;\n  text-transform: uppercase;\n`;\n\nconst ItemDate = styled.span`\n  padding-right: 20px;\n`;\n\nconst ItemTransaction = styled.span``;\n\nconst ItemDetails = styled.span`\n  color: ${(p) => (p.isPositive ? \"green\" : \"black\")};\n`;\n\nexport const ItemListing = ({ principal, date, trans, details, ...rest }) => (\n  <ItemListingWrapper {...rest}>\n    <ItemTextContainer>\n      <ItemPrincipalText>{principal}</ItemPrincipalText>\n      {(date || trans) && (\n        <ItemSubTextContainer>\n          <ItemDate>{date}</ItemDate>\n          <ItemTransaction>{trans}</ItemTransaction>\n        </ItemSubTextContainer>\n      )}\n    </ItemTextContainer>\n    <ItemDetails {...rest}>{details}</ItemDetails>\n  </ItemListingWrapper>\n);\n\nexport const BillPayeeTitle = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 15px 0;\n  margin-bottom: 10px;\n  background: ${(p) => p.theme.colors.light_accent};\n  /* border-bottom: 1px solid lightgray; */\n`;\n\nexport const BillPayeeInput = styled.input`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nexport const BillPayeeReview = styled.div`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nexport const ContinueButton = styled.button`\n  background-color: ${(p) => p.background || \"white\"};\n  color: ${(p) =>\n    p.disabled ? \"lightgrey\" : p.color || p.theme.colors.ylc_blue};\n  min-width: 140px;\n  height: 60px;\n  border-radius: 100px;\n  ${(p) => p.theme.fonts.extra_small_header}\n  font-size: 17px;\n  cursor: pointer;\n`;\n\nexport const ContinueButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding: 20px 0;\n`;\n","import React from \"react\";\nimport { BasicTipButton } from \"../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport { Space, BoldDiv } from \"../../Shared/BankPages\";\n\nexport const FirstStep = () => <div>Click here to sign in</div>;\n\nexport const SecondStep = ({ cardNumber, setStep }) => (\n  <div>\n    <Space />\n    This is where you enter the 16-digit number from the card you use for debit\n    and ATM transactions. {<br />}\n    <Space /> If you don’t have a card, you can use the number you were given at\n    the branch to access Online Banking. If you have set up a username, you can\n    enter it in this field instead of the card number to log in to Online\n    Banking. {<br />}\n    <Space /> For this activity, enter: <BoldDiv>\n      1234 5678 9098 7654\n    </BoldDiv>{\" \"}\n    in the card number box. Then select ‘continue’.\n    <BasicTipButton\n      disabled={cardNumber !== \"1234 5678 9098 7654\"}\n      onClick={() => setStep(3)}\n    >\n      Continue\n    </BasicTipButton>\n  </div>\n);\n\nexport const ThirdStep = ({ password, setStep }) => (\n  <div>\n    <Space />\n    This is where you enter the password. When creating your password, use a\n    different password than you use for other websites. Make it difficult for\n    others to guess your password by using a combination of letters and numbers\n    in it. If you think someone knows your password, change it right away. Do\n    not share your Online Banking password with anyone. Giving your password to\n    another person or company places your finances and privacy at risk. Never\n    share, disclose, or provide your card number or password to another party or\n    website other than your bank. Your bank will never send you an email\n    requesting this information. {<br />}\n    <Space /> For this activity, enter password: <BoldDiv>\n      literacy1234\n    </BoldDiv>{\" \"}\n    in the password box.\n    <BasicTipButton\n      disabled={password !== \"literacy1234\"}\n      onClick={() => setStep(4)}\n    >\n      Continue\n    </BasicTipButton>\n  </div>\n);\n\nexport const FourthStep = ({\n  setIsIntro,\n  setIntroOutroVisible,\n  saveToggled,\n}) => (\n  <div>\n    <Space />\n    Click this if you’d like to save your Card number or username on this\n    computer, so you don’t have to enter it again the next time you log in to\n    Online Banking. We don’t recommend this option if you’re using a public or\n    shared computer. For this activity, click on the box. Then select\n    ‘continue’.\n    <BasicTipButton\n      disabled={!saveToggled}\n      onClick={() => {\n        setIsIntro(false);\n        setIntroOutroVisible(true);\n      }}\n    >\n      Continue\n    </BasicTipButton>\n  </div>\n);\n","import React, { useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport styled from \"styled-components\";\nimport { BasicTooltip, BasicTipButton } from \"../../Shared/Tip\";\nimport { MarginedContainer, SignInButton } from \"../../Shared/Layout\";\nimport IntroOutro from \"../../IntroOutro\";\nimport {\n  BankingBackground,\n  BankingLogo,\n  SignInContainer,\n} from \"../../Shared/BankPages\";\nimport { FirstStep, SecondStep, ThirdStep, FourthStep } from \"./TipSteps\";\nimport { RadioButton } from \"react-radio-buttons\";\n\nconst StyledSignInWrapper = styled.div`\n  grid-column: span 12;\n  text-align: center;\n`;\n\nconst StyledGreeting = styled.div`\n  grid-column: span 12;\n  text-align: center;\n  ${(p) => p.theme.fonts.big_header}\n  color: white;\n  padding: 0 0 40px;\n`;\n\nconst InputContainer = styled.div`\n  padding: 15px 0;\n`;\n\nconst StyledNumberFormat = styled(NumberFormat)`\n  border: none;\n  border-bottom: 1px solid ${(p) => p.theme.colors.ylc_blue};\n  width: 100%;\n  ${(p) => p.theme.fonts.body_text};\n  font-weight: normal;\n  height: 40px;\n  ::placeholder {\n    color: ${(p) => p.theme.colors.ylc_blue};\n  }\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid ${(p) => p.theme.colors.ylc_blue};\n  width: 100%;\n  ${(p) => p.theme.fonts.body_text};\n  font-weight: normal;\n  height: 40px;\n  ::placeholder {\n    color: ${(p) => p.theme.colors.ylc_blue};\n  }\n`;\n\nconst PasswordLabel = styled.label`\n  ${(p) => p.theme.fonts.body_text};\n  color: ${(p) => p.theme.colors.ylc_blue};\n`;\n\nconst RadioInputContainer = styled.span`\n  padding: 10px;\n`;\n\nconst RadioInput = styled.input``;\n\nconst SignIn = ({ currentActivity, endCurrentActivity }) => {\n  const [step, setStep] = useState(1);\n  // const [step, setStep] = useState(2);\n  const [readyToSign, setReadyToSign] = useState(false);\n  // const [readyToSign, setReadyToSign] = useState(true);\n  const [introOutroVisible, setIntroOutroVisible] = useState(true);\n  // const [introOutroVisible, setIntroOutroVisible] = useState(false);\n  const [isIntro, setIsIntro] = useState(true);\n  const [cardNumber, setCardNumber] = useState(undefined);\n  const [password, setPassword] = useState(undefined);\n  const [saveToggled, setSaveToggled] = useState(false);\n\n  const PreSignIn = () => (\n    <StyledSignInWrapper>\n      <BasicTooltip\n        content={<FirstStep />}\n        showTip={step === 1}\n        staticOnly={true}\n      >\n        <SignInButton\n          onClick={() => {\n            setReadyToSign(true);\n            setStep(2);\n          }}\n        >\n          Sign-In\n        </SignInButton>\n      </BasicTooltip>\n    </StyledSignInWrapper>\n  );\n\n  return (\n    <>\n      <BankingBackground>\n        <MarginedContainer>\n          <BankingLogo />\n          <StyledGreeting>Welcome</StyledGreeting>\n          {readyToSign ? (\n            <SignInContainer>\n              <InputContainer>\n                {/* <label>\n                  Card Number: */}\n                <BasicTooltip\n                  content={<SecondStep {...{ cardNumber, setStep }} />}\n                  showTip={step === 2}\n                  staticOnly={true}\n                >\n                  <StyledNumberFormat\n                    onChange={(e) => setCardNumber(e.target.value)}\n                    format=\"#### #### #### ####\"\n                    placeholder={\"Card Number\"}\n                  />\n                </BasicTooltip>\n                {/* </label> */}\n              </InputContainer>\n              <InputContainer>\n                {/* <label> */}\n                {/* Password: */}\n                <BasicTooltip\n                  content={<ThirdStep {...{ password, setStep }} />}\n                  showTip={step === 3}\n                  staticOnly={true}\n                >\n                  <StyledInput\n                    onChange={(e) => setPassword(e.target.value)}\n                    type=\"password\"\n                    placeholder={\"Password\"}\n                  />\n                </BasicTooltip>\n                {/* </label> */}\n              </InputContainer>\n              <InputContainer>\n                <PasswordLabel>\n                  Save password?\n                  <BasicTooltip\n                    content={\n                      <FourthStep\n                        {...{ setIsIntro, setIntroOutroVisible, saveToggled }}\n                      />\n                    }\n                    showTip={step === 4}\n                    staticOnly={true}\n                  >\n                    <RadioInputContainer>\n                      <input\n                        type=\"checkbox\"\n                        checked={saveToggled}\n                        onClick={() =>\n                          setSaveToggled(saveToggled ? false : true)\n                        }\n                      />\n                    </RadioInputContainer>\n                  </BasicTooltip>\n                </PasswordLabel>\n              </InputContainer>\n            </SignInContainer>\n          ) : (\n            <PreSignIn />\n          )}\n          <IntroOutro\n            closeModal={() => setIntroOutroVisible(false)}\n            endExercise={() => endCurrentActivity()}\n            currentActivity={currentActivity}\n            visible={introOutroVisible}\n            isIntro={isIntro}\n          />\n        </MarginedContainer>\n      </BankingBackground>\n    </>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport { BasicTooltip, BasicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport {\n  TransactionsDetails,\n  ItemListing,\n  Space,\n  BoldDiv,\n} from \"../../Shared/BankPages\";\n\nconst CheckingHeader = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n`;\n\nconst AccountNumber = styled.div`\n  color: grey;\n  ${(p) => p.theme.fonts.large_button_text};\n  text-align: center;\n  padding-top: 5px;\n`;\n\nconst NotedBalance = styled.div`\n  ${(p) => p.theme.fonts.medium_header};\n  text-align: center;\n  padding: 15px;\n  font-weight: normal;\n`;\n\nconst Balance = ({ setStep, step, allSteps, balance }) => {\n  const BalanceContent = () => {\n    return (\n      <div>\n        Balance shows the amount of money in your account, including any funds\n        on hold.\n        <BasicTipButton\n          onClick={() => {\n            setStep(step + 1);\n          }}\n        >\n          Continue\n        </BasicTipButton>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <BasicTooltip\n        content={<BalanceContent />}\n        showTip={allSteps[step] === balance}\n        staticOnly={true}\n        placement=\"bottom-center\"\n        triggerOffset={-10}\n      >\n        <NotedBalance>$18,023.00</NotedBalance>\n      </BasicTooltip>\n    </div>\n  );\n};\n\nconst CheckingHeaderContainer = styled.div``;\n\nconst CheckingSectionWrapper = styled.div`\n  background: white;\n  padding-bottom: 100px;\n`;\n\nconst FullEmptyDiv = styled.div`\n  width: 100%;\n  /* background: red; */\n  height: 10px;\n`;\n\nconst Checking = ({\n  step,\n  setStep,\n  allSteps,\n  transactions,\n  wellRead,\n  taco,\n  internetDeposit,\n  preAuth,\n  totalDebits,\n  credits,\n  creditsDebits,\n  hold,\n  overdraft,\n  available,\n  institution,\n  transit,\n  accountNumber,\n  setCheckingService,\n  checkingTransactions,\n  accountInfo,\n  checkingInformation,\n  checkingService,\n  balance,\n}) => {\n  const CheckingHeaderInfo = () => (\n    <CheckingHeaderContainer>\n      <CheckingHeader>Chequing</CheckingHeader>\n      <AccountNumber>5522 8899-222</AccountNumber>\n      <Balance {...{ setStep, step, allSteps, balance }} />\n\n      <TransactionsDetails\n        transactionsClick={() => {\n          setCheckingService(checkingTransactions);\n          setStep(step + 1);\n        }}\n        detailsClick={() => {\n          setCheckingService(checkingInformation);\n          setStep(step + 1);\n        }}\n        transactionsDisabled={allSteps[step] !== transactions}\n        detailsDisabled={allSteps[step] !== accountInfo}\n        transactionsActive={checkingService !== checkingTransactions}\n        detailsActive={checkingService !== checkingInformation}\n        {...{\n          allSteps,\n          step,\n          transactions,\n          accountInfo,\n        }}\n      />\n    </CheckingHeaderContainer>\n  );\n  const Transactions = () => {\n    return (\n      <CheckingSectionWrapper>\n        <CheckingHeaderInfo />\n        <InfoTip\n          tipContent={\n            <>\n              <div>\n                On January 21st, $12.50 was spent at Well Read Books. Point of\n                Sale (POS) Interac Retail purchase means you made a purchase\n                with your debit card.\n              </div>\n              {<br />}\n              <div>\n                The numbers you see represents the transaction number which is a\n                special label that identifies the purchase. Every purchase will\n                have a different transaction number.\n              </div>\n            </>\n          }\n          tipTarget={\n            <ItemListing\n              principal={\"Well-Read Books 000009887767\"}\n              date={\"Jan 21, 2020\"}\n              trans={\"POS - Interac Retail purchase\"}\n              details={\"-$12.50\"}\n            />\n          }\n          showTip={wellRead}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <>\n              <div>\n                On January 16th, $109.45 was debited from your account to pay a\n                Taco Electric bill.\n              </div>\n              {<br />}\n              <div>\n                The numbers you see represents the transaction number which is a\n                special label that identifies the purchase. Every purchase will\n                have a different transaction number.\n              </div>\n            </>\n          }\n          tipTarget={\n            <ItemListing\n              principal={\"TACO ELECTRIC 0000376166356\"}\n              date={\"Jan 16, 2020\"}\n              trans={\"internet banking - Internet Bill Pay\"}\n              details={\"-$109.45\"}\n            />\n          }\n          showTip={taco}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <>\n              <div>\n                On January 5th, $2000 was deposited (credited) in the account.\n              </div>\n              {<br />}\n              <div>\n                The numbers you see represents the transaction number which is a\n                special label that identifies the purchase. Every purchase will\n                have a different transaction number.\n              </div>\n            </>\n          }\n          tipTarget={\n            <ItemListing\n              principal={\"Deposit 0000000261883\"}\n              date={\"5 Jan, 2020\"}\n              trans={\"Internet banking - internet deposit\"}\n              details={\"+$2000.00\"}\n              isPositive\n            />\n          }\n          showTip={internetDeposit}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <>\n              <div>\n                On January 1st, $96.00 was debited from your account to TD\n                Insurance National. It was a preauthorized debit which means\n                instead of sending a payment, a company withdraws funds from\n                your bank account.\n              </div>\n              {<br />}\n              <div>\n                It’s a convenient way to pay bills and make other payments\n                automatically and has to be approved by the owner of the bank\n                account first.\n              </div>\n            </>\n          }\n          tipTarget={\n            <ItemListing\n              principal={\"Debit Td insurance nat'l\"}\n              date={\"1 Jan, 2020\"}\n              trans={\"electronic funds - transfer preauthorized debit\"}\n              details={\"-$96.00\"}\n            />\n          }\n          showTip={preAuth}\n          {...{ step, setStep, allSteps }}\n        />\n        <ItemListing\n          principal={\"midnight sun co 000009767867\"}\n          date={\"28 Dec, 2019\"}\n          trans={\"POS - interac retail purchase\"}\n          details={\"-$4.95\"}\n        />\n        <ItemListing\n          principal={\"Toyota Canada 0000000763651\"}\n          date={\"26 Dec, 2020\"}\n          trans={\"internet banking - internet bill pay\"}\n          details={\"-$320.00\"}\n        />\n        <ItemListing\n          principal={\"E-transfer 00000736716\"}\n          date={\"26 Dec, 2020\"}\n          trans={\"internet banking - internet e-transfer\"}\n          details={\"-$900.00\"}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              <div>The total under Debits is $1422.90</div>\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              isSummary\n              principal={\"Total debits\"}\n              details={\"-$1422.90\"}\n            />\n          }\n          showTip={totalDebits}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              <div>the total under Credits is $2000.00</div>\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              isSummary\n              principal={\"Total credits\"}\n              details=\"+$2000.00\"\n            />\n          }\n          showTip={credits}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              <div>\n                <BoldDiv>\n                  $2763.80 (credits) - $2606.19 (debits)= $157.61\n                </BoldDiv>\n                {<br />}\n                <div>\n                  $157.61 was not spent this month. It can be put into a savings\n                  account or spent at a later date.\n                </div>\n              </div>\n            </div>\n          }\n          tipTarget={<FullEmptyDiv />}\n          showTip={creditsDebits}\n          placement={\"center\"}\n          {...{ step, setStep, allSteps }}\n        />\n      </CheckingSectionWrapper>\n    );\n  };\n\n  const AccountInformation = () => {\n    return (\n      <CheckingSectionWrapper>\n        <CheckingHeaderInfo />\n        <InfoTip\n          tipContent={\n            <div>\n              Funds on Hold are deposits made to your account that are not yet\n              available to withdraw.\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              // isSummary\n              principal={\"Funds on Hold\"}\n              details=\"$500.00\"\n            />\n          }\n          showTip={hold}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              Overdraft Limit is the maximum amount of money you can withdraw\n              from your account after your balance reaches zero.\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              // isSummary\n              principal={\"Overdraft Limit\"}\n              details=\"$100.00\"\n            />\n          }\n          showTip={overdraft}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              Available Funds is your balance minus any funds on hold plus any\n              overdraft limit (if applicable), representing money available for\n              immediate use in your account.\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              // isSummary\n              principal={\"Available Funds\"}\n              details=\"$17,623.00\"\n            />\n          }\n          showTip={available}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              An institution number is a 3- digit code that identifies which\n              bank provider the account is associated with.\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              // isSummary\n              principal={\"Institution Number\"}\n              details=\"554\"\n            />\n          }\n          showTip={institution}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              A transit number is a 5- digit code that identifies where in\n              Canada your bank is located.\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              // isSummary\n              principal={\"Transit Number\"}\n              details=\"555\"\n            />\n          }\n          showTip={transit}\n          {...{ step, setStep, allSteps }}\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              An account number is a 7- digit number that identifies the owner\n              of the account.\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              // isSummary\n              principal={\"Account Number\"}\n              details=\"555-5555\"\n            />\n          }\n          showTip={accountNumber}\n          {...{ step, setStep, allSteps }}\n        />\n      </CheckingSectionWrapper>\n    );\n  };\n\n  return (\n    <div>\n      {checkingService === checkingTransactions ? (\n        <Transactions />\n      ) : checkingService === checkingInformation ? (\n        <AccountInformation />\n      ) : (\n        <div>no service </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checking;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BasicTooltip, BasicTipButton, InfoTip } from \"./Tip\";\n\nconst StyledAccountBlock = styled.div`\n  display: flex;\n  border: 1px solid lightgray;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  box-shadow: 1px 0px 5px lightgray;\n  cursor: pointer;\n  background: white;\n`;\n\nconst AccountInfo = styled.div`\n  flex-grow: 1;\n`;\n\nconst BankAccounts = styled.div`\n  ${(p) => p.theme.fonts.body_text};\n  color: grey;\n  padding: 15px 0;\n`;\n\nconst AccountTitle = styled.span`\n  font-weight: bold;\n  border-bottom: 3px solid lightgray;\n  padding: 15px 0 10px;\n  margin-left: 15px;\n  display: inline-block;\n`;\nconst AccountNumber = styled.span`\n  padding-left: 10px;\n  color: grey;\n`;\n\nconst AccountBalance = styled.div`\n  padding: 10px 0 10px 15px;\n  color: ${(p) => p.theme.colors.ylc_blue};\n`;\n\nconst TransferContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 150px;\n  border-left: 2px solid lightgray;\n  color: ${(p) => p.theme.colors.ylc_blue};\n`;\n\nconst AllAccountsContainer = styled.div`\n  /* background: white; */\n  /* height: 100%; */\n  /* min-height: 100vh; */\n  padding-bottom: 150px;\n`;\n\nconst AccountBlock = ({ title, onClick, balance, accNumber }) => (\n  <StyledAccountBlock>\n    <AccountInfo onClick={onClick}>\n      <AccountTitle>{title}</AccountTitle>\n      <AccountNumber>{accNumber}</AccountNumber>\n      <AccountBalance>{balance}</AccountBalance>\n    </AccountInfo>\n    <TransferContainer>TRANSFER</TransferContainer>\n  </StyledAccountBlock>\n);\n\nconst AllAccounts = ({\n  allSteps,\n  step,\n  check,\n  setIsChecking = () => {},\n  setStep,\n}) => {\n  return (\n    <AllAccountsContainer>\n      <BankAccounts>Bank Accounts</BankAccounts>\n      <BasicTooltip\n        content={\"Click on ‘Chequing Account’.\"}\n        showTip={allSteps[step] === check}\n        staticOnly={true}\n        placement=\"left-center\"\n      >\n        <AccountBlock\n          title={\"Checking\"}\n          balance={\"$18,023.00\"}\n          accNumber={\"5522\"}\n          onClick={() => {\n            setIsChecking(true);\n            allSteps[step] === check && setStep(step + 1);\n          }}\n        />\n      </BasicTooltip>\n      <AccountBlock\n        title={\"Savings\"}\n        balance={\"$12,115.50\"}\n        accNumber={\"7788\"}\n      />\n      <AccountBlock\n        title={\"Checking 2\"}\n        balance={\"$5,112.50\"}\n        accNumber={\"9811\"}\n      />\n    </AllAccountsContainer>\n  );\n};\n\nexport default AllAccounts;\n","import React, { useState, useEffect } from \"react\";\nimport { MarginedContainer } from \"../../Shared/Layout\";\nimport {\n  BankingBackground,\n  BankingHeader,\n  BankingContainer,\n  CleanBackground,\n  BankingFooter,\n  TransactionsDetails,\n} from \"../../Shared/BankPages\";\nimport IntroOutro from \"../../IntroOutro\";\nimport Checking from \"./Checking\";\nimport AllAccounts from \"../../Shared/AllAccounts\";\n\n// ALL STEPS\nconst check = \"check\";\nconst balance = \"balance\";\nconst accountInfo = \"accountInfo\";\nconst hold = \"hold\";\nconst overdraft = \"overdraft\";\nconst available = \"available\";\nconst institution = \"institution\";\nconst transit = \"transit\";\nconst accountNumber = \"accountNumber\";\nconst transactions = \"transactions\";\nconst wellRead = \"wellRead\";\nconst taco = \"taco\";\nconst internetDeposit = \"internetDeposit\";\nconst preAuth = \"preAuth\";\nconst totalDebits = \"totalDebits\";\nconst credits = \"credits\";\nconst creditsDebits = \"creditsDebits\";\n\n// All steps array for sequence\nconst allSteps = [\n  check,\n  balance,\n  accountInfo,\n  hold,\n  overdraft,\n  available,\n  institution,\n  transit,\n  accountNumber,\n  transactions,\n  wellRead,\n  taco,\n  internetDeposit,\n  preAuth,\n  totalDebits,\n  credits,\n  creditsDebits,\n];\n\nconst checkingTransactions = \"checkingTransactions\";\nconst checkingInformation = \"checkingInformation\";\n\nconst Overview = ({ currentActivity, endCurrentActivity }) => {\n  const [step, setStep] = useState(0);\n  const [isChecking, setIsChecking] = useState(false);\n  // const [isChecking, setIsChecking] = useState(true);\n  const [checkingService, setCheckingService] = useState(checkingTransactions);\n  // const [checkingService, setCheckingService] = useState(checkingInformation);\n  const [introOutroVisible, setIntroOutroVisible] = useState(true);\n  // const [introOutroVisible, setIntroOutroVisible] = useState(false);\n  const [isIntro, setIsIntro] = useState(true);\n\n  useEffect(() => {\n    if (step === allSteps.length) {\n      setStep(step + 1);\n      setIsIntro(false);\n      setIntroOutroVisible(true);\n    }\n  }, [step]);\n\n  return (\n    <BankingBackground>\n      <BankingHeader />\n      <CleanBackground>\n        <MarginedContainer>\n          <BankingContainer>\n            {isChecking ? (\n              <>\n                <Checking\n                  {...{\n                    step,\n                    setStep,\n                    allSteps,\n                    transactions,\n                    wellRead,\n                    taco,\n                    internetDeposit,\n                    preAuth,\n                    totalDebits,\n                    credits,\n                    creditsDebits,\n                    hold,\n                    overdraft,\n                    available,\n                    institution,\n                    transit,\n                    accountNumber,\n                    setCheckingService,\n                    checkingTransactions,\n                    accountInfo,\n                    checkingInformation,\n                    checkingService,\n                    balance,\n                  }}\n                />\n              </>\n            ) : (\n              <AllAccounts\n                {...{ allSteps, step, check, setIsChecking, setStep }}\n              />\n            )}\n          </BankingContainer>\n\n          <IntroOutro\n            closeModal={() => setIntroOutroVisible(false)}\n            endExercise={() => endCurrentActivity()}\n            currentActivity={currentActivity}\n            visible={introOutroVisible}\n            isIntro={isIntro}\n          />\n        </MarginedContainer>\n      </CleanBackground>\n      <BankingFooter />\n    </BankingBackground>\n  );\n};\n\nexport default Overview;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BasicTooltip, BasicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport { ModalOverlay, ResponsiveContent } from \"../../Modal\";\nimport payBillIcon from \"../../assets/contract.png\";\nimport depositIcon from \"../../assets/piggy-bank.png\";\nimport transferIcon from \"../../assets/exchange.png\";\nimport interacIcon from \"../../assets/coin.png\";\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  width: 400px;\n  flex-wrap: wrap;\n`;\n\nconst BankingButton = styled.button`\n  width: 200px;\n  height: 200px;\n  cursor: pointer;\n  ${(p) => p.theme.fonts.extra_small_header};\n  font-weight: normal;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    max-height: 50px;\n    padding-bottom: 5px;\n  }\n`;\n\nexport const PaymentMethods = ({\n  setStep,\n  setPaymentMethodsVisible,\n  setMainPage,\n  step,\n  billPaymentsStep,\n  billPaymentsPage,\n  allSteps,\n}) => {\n  return (\n    <ModalOverlay\n      visible={billPaymentsStep}\n      zIndex={1}\n      // closeModal={closeModal}\n      notOverlayCloseable={true}\n      render={() => (\n        // <ResponsiveContent>\n        <ButtonsContainer>\n          <BankingButton>\n            <img src={transferIcon} alt=\"\" />\n            Transfer\n          </BankingButton>\n          <InfoTip\n            tipContent={<div>Click on 'Pay a Bill'.</div>}\n            tipTarget={\n              <BankingButton\n                onClick={() => {\n                  setStep(step + 1);\n                  setPaymentMethodsVisible(false);\n                  setMainPage(billPaymentsPage);\n                }}\n              >\n                <img src={payBillIcon} alt=\"\" />\n                Pay a bill\n              </BankingButton>\n            }\n            showTip={billPaymentsStep}\n            showButton={false}\n            {...{ step, setStep, allSteps }}\n          />\n          <BankingButton>\n            <img src={interacIcon} alt=\"\" />\n            <div>Interac</div>\n            <div>E-transfer</div>\n          </BankingButton>\n          <BankingButton>\n            <img src={depositIcon} alt=\"\" />\n            Deposit\n          </BankingButton>\n        </ButtonsContainer>\n        // </ResponsiveContent>\n      )}\n    ></ModalOverlay>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BasicTooltip, BasicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport {\n  BillPayeeTitle,\n  BillPayeeInput,\n  BillPayeeReview,\n  ContinueButton,\n  ContinueButtonContainer,\n} from \"../../Shared/BankPages\";\nimport { SignInButton } from \"../../Shared/Layout\";\n\nexport const AddVerifyPayee = ({\n  isVerifyPayee,\n  setTacoAdded,\n  setPaymentStage,\n  companyTitle,\n  TacoTitle,\n  setCompanyTitle,\n  step,\n  setStep,\n  setVerifyPayee,\n  inputedAccountNumber,\n  setInputedAccountNumber,\n  payeesStage,\n  confirmPayee,\n  allSteps,\n  addCompanyName,\n  addBillNumber,\n  goToVerify,\n}) => {\n  console.log({ it: allSteps[step] });\n  return (\n    <div>\n      {isVerifyPayee ? (\n        <div>\n          <BillPayeeTitle>Review the new payee</BillPayeeTitle>\n          <BillPayeeReview>Company Name: {companyTitle}</BillPayeeReview>\n          <BillPayeeReview>\n            Account/Bill Number: {inputedAccountNumber}\n          </BillPayeeReview>\n          <ContinueButtonContainer>\n            <InfoTip\n              tipContent={\n                <div>\n                  Verify everything is correct. It should say the payee name and\n                  account number entered. Choose \"Add Payee\" to continue.\n                </div>\n              }\n              tipTarget={\n                <ContinueButton\n                  onClick={() => {\n                    setTacoAdded(true);\n                    setPaymentStage(payeesStage);\n                    setStep(step + 1);\n                  }}\n                  disabled={allSteps[step] !== confirmPayee}\n                >\n                  Add Payee\n                </ContinueButton>\n              }\n              showTip={confirmPayee}\n              showButton={false}\n              {...{ step, setStep, allSteps }}\n            />\n          </ContinueButtonContainer>\n        </div>\n      ) : (\n        <div>\n          <div>\n            <div>\n              <BillPayeeTitle>Add a New Payee</BillPayeeTitle>\n              <InfoTip\n                tipContent={\n                  <div>\n                    Enter company name: <strong>Taco Electric</strong>\n                  </div>\n                }\n                buttonDisabled={companyTitle !== TacoTitle}\n                tipTarget={\n                  <BillPayeeInput\n                    onChange={(e) => setCompanyTitle(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Company Name\"\n                  />\n                }\n                showTip={addCompanyName}\n                showButton={true}\n                {...{ step, setStep, allSteps }}\n              />\n            </div>\n            <div>\n              <InfoTip\n                tipContent={\n                  <div>\n                    Now enter account/bill number. Make something up.{\" \"}\n                    <span role=\"img\" aria-label=\"smile emoji\">\n                      🙂\n                    </span>\n                  </div>\n                }\n                buttonDisabled={false}\n                tipTarget={\n                  <label>\n                    <BillPayeeInput\n                      onChange={(e) => setInputedAccountNumber(e.target.value)}\n                      placeholder={\"Account/Bill Number\"}\n                    />\n                  </label>\n                }\n                showTip={addBillNumber}\n                showButton={true}\n                {...{ step, setStep, allSteps }}\n              />\n            </div>\n          </div>\n          <ContinueButtonContainer>\n            <InfoTip\n              tipContent={\n                <div>Choose \"Continue\" to review your new payee.</div>\n              }\n              tipTarget={\n                <ContinueButton\n                  onClick={() => {\n                    setStep(step + 1);\n                    setVerifyPayee(true);\n                  }}\n                  disabled={allSteps[step] !== goToVerify}\n                >\n                  Continue\n                </ContinueButton>\n              }\n              showTip={goToVerify}\n              showButton={false}\n              {...{ step, setStep, allSteps }}\n            />\n          </ContinueButtonContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BasicTooltip, BasicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  BillPayeeTitle,\n  BillPayeeInput,\n  BillPayeeReview,\n  ContinueButton,\n  ContinueButtonContainer,\n} from \"../../Shared/BankPages\";\n\nconst StyledNumberFormat = styled(NumberFormat)`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n  border-top: 1px solid lightgray;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nconst StyledDatePicker = styled(DatePicker)`\n  /* width: calc(100% - 40px - 2px - 100px); */\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nconst StyledSelect = styled.select`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  /* border-bottom: 1px solid lightgray; */\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: calc(100% - 40px - 2px - 100px);\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst LightOption = styled.option`\n  /* color: lightgray !important; */\n`;\n\nexport const PayVerifyBill = ({\n  isVerifyBill,\n  setStep,\n  step,\n  setVerifyBill,\n  setAccountType,\n  setBillAmount,\n  setBillDate,\n  accountType,\n  billAmount,\n  billDate,\n  allSteps,\n  confirmBillPayment,\n  chooseDebitAccount,\n  enterAmount,\n  enterDate,\n  reviewBillPayment,\n}) => {\n  let [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  const todayDate = `${month}/${day}/${year}`;\n  const [bMonth, bDay, bYear] = billDate\n    ? billDate.toLocaleDateString(\"en-US\").split(\"/\")\n    : [];\n  const formattedBillDate = `${bMonth}/${bDay}/${bYear}`;\n  return (\n    <div>\n      {isVerifyBill ? (\n        <div>\n          <BillPayeeTitle>Verify Payment Information</BillPayeeTitle>\n          <BillPayeeReview>Payee: Taco Electric</BillPayeeReview>\n          <BillPayeeReview>Account: {accountType}</BillPayeeReview>\n          <BillPayeeReview>Amount: {billAmount}</BillPayeeReview>\n          <BillPayeeReview>Payment Date: {formattedBillDate}</BillPayeeReview>\n          <ContinueButtonContainer>\n            <InfoTip\n              tipContent={\n                <div>\n                  Review what you have entered and then press the ‘Confirm\n                  Payment’ button.\n                </div>\n              }\n              tipTarget={\n                <ContinueButton\n                  onClick={() => {\n                    //Final Step\n                    setStep(step + 1);\n                  }}\n                >\n                  Confirm Payment\n                </ContinueButton>\n              }\n              showTip={confirmBillPayment}\n              showButton={false}\n              {...{ step, setStep, allSteps }}\n            />\n          </ContinueButtonContainer>\n        </div>\n      ) : (\n        <div>\n          <BillPayeeTitle>Pay Taco Electric</BillPayeeTitle>\n          <div>\n            <InfoTip\n              tipContent={\n                <div>\n                  <div>\n                    Choose an account that you would like to pay the bill with.\n                  </div>\n                  <br />\n                  <div>For this activity, choose ‘chequing’.</div>\n                </div>\n              }\n              tipTarget={\n                <StyledSelect onChange={(e) => setAccountType(e.target.value)}>\n                  <LightOption value=\"\">Select Account</LightOption>\n                  <option value=\"checking\">Checking</option>\n                  <option value=\"saving\">Saving</option>\n                </StyledSelect>\n              }\n              showTip={chooseDebitAccount}\n              buttonDisabled={accountType !== \"checking\"}\n              showButton={true}\n              {...{ step, setStep, allSteps }}\n            />\n          </div>\n          <div>\n            <InfoTip\n              tipContent={\n                <div>\n                  <div>Enter the amount you would like pay. </div>\n                  <br />\n                  <div>For this activity, enter 68.00.</div>\n                </div>\n              }\n              tipTarget={\n                <StyledNumberFormat\n                  onChange={(e) => setBillAmount(e.target.value)}\n                  prefix={\"$\"}\n                  placeholder=\"Amount\"\n                />\n              }\n              showTip={enterAmount}\n              buttonDisabled={billAmount !== \"$68.00\"}\n              showButton={true}\n              {...{ step, setStep, allSteps }}\n            />\n          </div>\n          <div>\n            <InfoTip\n              tipContent={\n                <div>\n                  <div>Enter the date you would like to pay the bill.</div>\n                  <br />\n                  <div>For this activity, enter ‘Today’.</div>\n                </div>\n              }\n              tipTarget={\n                <DateContainer>\n                  <div>Select Date</div>\n                  <StyledDatePicker\n                    selected={billDate}\n                    onChange={(date) => setBillDate(date)}\n                    todayButton=\"Today\"\n                  />\n                </DateContainer>\n              }\n              showTip={enterDate}\n              buttonDisabled={todayDate !== formattedBillDate}\n              showButton={true}\n              {...{ step, setStep, allSteps }}\n            />\n          </div>\n          <ContinueButtonContainer>\n            <InfoTip\n              tipContent={\n                <div>Click 'Continue' to review your bill payment.</div>\n              }\n              tipTarget={\n                <ContinueButton\n                  onClick={() => {\n                    setVerifyBill(true);\n                    setStep(step + 1);\n                  }}\n                  disabled={allSteps[step] !== reviewBillPayment}\n                >\n                  Continue\n                </ContinueButton>\n              }\n              showTip={reviewBillPayment}\n              showButton={false}\n              {...{ step, setStep, allSteps }}\n            />\n          </ContinueButtonContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BasicTooltip, BasicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport { MarginedContainer } from \"../../Shared/Layout\";\nimport IntroOutro from \"../../IntroOutro\";\nimport AllAccounts from \"../../Shared/AllAccounts\";\nimport { PaymentMethods } from \"./PaymentMethods\";\nimport { ItemListing } from \"../../Shared/BankPages\";\nimport { AddVerifyPayee } from \"./AddVerifyPayee\";\nimport { PayVerifyBill } from \"./PayVerifyBill\";\n\nimport {\n  BankingBackground,\n  BankingHeader,\n  BankingContainer,\n  CleanBackground,\n  BankingFooter,\n} from \"../../Shared/BankPages\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n/**\n * Start in \"All accounts\" page with payments at the bottom\n * Go to Payment Options\n * Go to Bill Payments (list of payees)\n * Go to add Payee page\n * Go to verify payee page\n * Go to pay Bill Payments (list of payees)\n * Go to bill payment page\n * Go to verify bill payment\n */\n\nconst clickPayments = \"clickPayments\";\nconst billPaymentsStep = \"billPaymentsStep\";\nconst addEditPayee = \"addEditPayee\";\nconst addCompanyName = \"addCompanyName\";\nconst addBillNumber = \"addBillNumber\";\nconst goToVerify = \"goToVerify\";\nconst confirmPayee = \"confirmPayee\";\n// const payBillNow = \"payBillNow\";\nconst chooseTaco = \"chooseTaco\";\nconst chooseDebitAccount = \"chooseDebitAccount\";\nconst enterAmount = \"enterAmount\";\nconst enterDate = \"enterDate\";\nconst reviewBillPayment = \"reviewBillPayment\";\nconst confirmBillPayment = \"confirmBillPayment\";\n\nconst allSteps = [\n  clickPayments,\n  billPaymentsStep,\n  addEditPayee,\n  addCompanyName,\n  addBillNumber,\n  goToVerify,\n  confirmPayee,\n  // payBillNow,\n  chooseTaco,\n  chooseDebitAccount,\n  enterAmount,\n  enterDate,\n  reviewBillPayment,\n  confirmBillPayment,\n];\n\nconst PayeeControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 10px 0;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst ChooseText = styled.div`\n  ${(p) => p.theme.fonts.extra_small_header};\n`;\n\nconst AddPayeeButton = styled.button`\n  /* background: ${(p) => p.theme.colors.bank_blue}; */\n  background: white;\n  width: 150px;\n  height: 50px;\n  /* color: white; */\n  cursor: pointer;\n  ${(p) => p.theme.fonts.large_button_text};\n`;\n\nconst ListOfPayees = ({\n  setPaymentStage,\n  setStep,\n  step,\n  addVerifyPayeeStage,\n  tacoAdded,\n  payVerifyBillStage,\n  inputedAccountNumber,\n}) => {\n  return (\n    <div>\n      <PayeeControlsContainer>\n        <ChooseText>Choose your payee</ChooseText>\n        <InfoTip\n          tipContent={<div>Choose \"Add Payee\".</div>}\n          tipTarget={\n            <AddPayeeButton\n              onClick={() => {\n                setPaymentStage(addVerifyPayeeStage);\n                setStep(step + 1);\n              }}\n              disabled={allSteps[step] !== addEditPayee}\n            >\n              Add Payee\n            </AddPayeeButton>\n          }\n          showTip={addEditPayee}\n          showButton={false}\n          {...{ step, setStep, allSteps }}\n        />\n      </PayeeControlsContainer>\n      {tacoAdded && (\n        <InfoTip\n          tipContent={\n            <div>\n              <div>\n                You did it! Taco Electric is set up for online bill payments.\n                You just need to pay the bill!\n              </div>\n              <br />\n              <div>\n                Click on \"Taco Electric\", this will take them to a screen where\n                they choose an account, enter an amount and a payment date.\n              </div>\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              onClick={() => {\n                setPaymentStage(payVerifyBillStage);\n                setStep(step + 1);\n              }}\n              principal={\"Taco Electric\"}\n              date={inputedAccountNumber}\n              details={\"PAY BILL\"}\n            />\n          }\n          showTip={chooseTaco}\n          showButton={false}\n          {...{ step, setStep, allSteps }}\n        />\n      )}\n      <ItemListing\n        principal={\"Toyota Canada\"}\n        date={\"20193924UQC685\"}\n        details={\"PAY BILL\"}\n      />\n      <ItemListing\n        principal={\"Bell Canada\"}\n        date={\"9988225511\"}\n        details={\"PAY BILL\"}\n      />\n      <ItemListing principal={\"NSLSC\"} date={\"088811\"} details={\"PAY BILL\"} />\n    </div>\n  );\n};\n\nconst BillPaymentsContainer = styled.div`\n  min-height: calc(100vh - 150px);\n  background: white;\n  padding-bottom: 150px;\n`;\n\nconst BillPayments = (props) => {\n  const {\n    paymentStage,\n    payeesStage,\n    addVerifyPayeeStage,\n    payVerifyBillStage,\n  } = props;\n  return (\n    <BillPaymentsContainer>\n      {paymentStage === payeesStage ? (\n        <ListOfPayees {...props} />\n      ) : paymentStage === addVerifyPayeeStage ? (\n        <AddVerifyPayee {...props} />\n      ) : paymentStage === payVerifyBillStage ? (\n        <PayVerifyBill {...props} />\n      ) : (\n        <div>No Stage </div>\n      )}\n    </BillPaymentsContainer>\n  );\n};\n\nconst addDays = (date, days) => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\n//Main Pages\nconst allAccountsPage = \"allAccounts\";\nconst billPaymentsPage = \"billPaymentsPage\";\n\nconst MakingPayments = ({ currentActivity, endCurrentActivity }) => {\n  const [step, setStep] = useState(0);\n  const [introOutroVisible, setIntroOutroVisible] = useState(true);\n  // const [introOutroVisible, setIntroOutroVisible] = useState(false);\n  const [isIntro, setIsIntro] = useState(true);\n  const [payTabActive, setPayTabActive] = useState(\"home\");\n\n  // Main Page State\n  const [mainPage, setMainPage] = useState(allAccountsPage);\n  // const [mainPage, setMainPage] = useState(undefined);\n  const [paymentMethodsVisible, setPaymentMethodsVisible] = useState(false);\n  // const [paymentMethodsVisible, setPaymentMethodsVisible] = useState(true);\n\n  // Bill Payment stages\n  const payeesStage = \"payeesStage\";\n  const addVerifyPayeeStage = \"addVerifyPayeeStage\";\n  const payVerifyBillStage = \"payVerifyBillStage\";\n\n  // State for bill payments\n  const TacoTitle = \"Taco Electric\";\n  const [tacoAdded, setTacoAdded] = useState(false);\n  const [paymentStage, setPaymentStage] = useState(payeesStage);\n  // const [paymentStage, setPaymentStage] = useState(payVerifyBillStage);\n  const [companyTitle, setCompanyTitle] = useState(undefined);\n  // const [companyTitle, setCompanyTitle] = useState(\"test title\");\n  const [inputedAccountNumber, setInputedAccountNumber] = useState(undefined);\n  // const [inputedAccountNumber, setInputedAccountNumber] = useState(\n  // 83838383838383\n  // );\n  const [isVerifyPayee, setVerifyPayee] = useState(false);\n  // const [isVerifyPayee, setVerifyPayee] = useState(true);\n  const [isVerifyBill, setVerifyBill] = useState(false);\n  // const [isVerifyBill, setVerifyBill] = useState(true);\n  const [accountType, setAccountType] = useState(undefined);\n  // const [accountType, setAccountType] = useState(\"Checking\");\n  const [billAmount, setBillAmount] = useState(undefined);\n  // const [billAmount, setBillAmount] = useState(\"$680.00\");\n  const [billDate, setBillDate] = useState(addDays(new Date(), 5));\n\n  useEffect(() => {\n    if (step === allSteps.length) {\n      setStep(step + 1);\n      setIsIntro(false);\n      setIntroOutroVisible(true);\n    }\n  }, [step]);\n\n  const paymentsClick = () => {\n    setStep(step + 1);\n    setPaymentMethodsVisible(true);\n    setPayTabActive(\"pay\");\n  };\n\n  console.log({ paymentMethodsVisible });\n\n  return (\n    <BankingBackground>\n      <BankingHeader />\n      <CleanBackground>\n        <MarginedContainer>\n          <BankingContainer>\n            {mainPage === allAccountsPage ? (\n              <AllAccounts\n                {...{\n                  setStep,\n                  allSteps,\n                  // setPaymentMethodsVisible,\n                  setMainPage,\n                  step,\n                  // paymentMethodsVisible,\n                }}\n              />\n            ) : (\n              <BillPayments\n                {...{\n                  //general\n                  paymentStage,\n                  payeesStage,\n                  addVerifyPayeeStage,\n                  payVerifyBillStage,\n                  //list of payees\n                  setPaymentStage,\n                  setStep,\n                  step,\n                  tacoAdded,\n                  inputedAccountNumber,\n                  setInputedAccountNumber,\n                  //addVerify payees\n                  isVerifyPayee,\n                  setTacoAdded,\n                  companyTitle,\n                  TacoTitle,\n                  setCompanyTitle,\n                  setVerifyPayee,\n                  confirmPayee,\n                  allSteps,\n                  addCompanyName,\n                  addBillNumber,\n                  goToVerify,\n                  //payVerifyBill\n                  isVerifyBill,\n                  setVerifyBill,\n                  setAccountType,\n                  setBillAmount,\n                  setBillDate,\n                  accountType,\n                  billAmount,\n                  billDate,\n                  confirmBillPayment,\n                  chooseDebitAccount,\n                  enterAmount,\n                  enterDate,\n                  reviewBillPayment,\n                }}\n              />\n            )}\n            <IntroOutro\n              closeModal={() => setIntroOutroVisible(false)}\n              endExercise={() => endCurrentActivity()}\n              currentActivity={currentActivity}\n              visible={introOutroVisible}\n              isIntro={isIntro}\n            />\n            {paymentMethodsVisible && (\n              <PaymentMethods\n                {...{\n                  setStep,\n                  setPaymentMethodsVisible,\n                  setMainPage,\n                  step,\n                  billPaymentsStep,\n                  billPaymentsPage,\n                  allSteps,\n                }}\n              />\n            )}\n          </BankingContainer>\n        </MarginedContainer>\n      </CleanBackground>\n\n      <BankingFooter\n        {...{\n          step,\n          setStep,\n          allSteps,\n          paymentsClick,\n          clickPayments,\n        }}\n        isActive={payTabActive}\n      />\n    </BankingBackground>\n  );\n};\n\nexport default MakingPayments;\n","import { activitiesEnums } from \"../enums\";\n\nimport SignIn from \"./SignIn\";\nimport AccountOverview from \"./AccountOverview\";\nimport MakingPayments from \"./MakingPayments\";\n\nexport default {\n  [activitiesEnums.SIGNIN]: SignIn,\n  [activitiesEnums.ACCOUNTOVERVIEW]: AccountOverview,\n  [activitiesEnums.MAKINGPAYMENTS]: MakingPayments,\n};\n","import React, { useState } from \"react\";\nimport styled, { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport ActivityChooser from \"./ActivityChooser\";\nimport AllActivities from \"./Activities\";\nimport { activitiesEnums } from \"./enums\";\nimport { PageContainer, ActButton } from \"./Shared/Layout\";\nimport SignIn from \"./Activities/SignIn\";\nimport { theme } from \"./Global\";\n// import { act } from \"react-dom/test-utils\";\n\nconst AllActivitiesButton = styled(ActButton)`\n  position: fixed;\n  top: 5px;\n  right: 5px;\n  z-index: 10000000;\n  padding: 10px 15px;\n  border-radius: 50px;\n`;\n\nfunction App() {\n  const [activitiesListVisible, setActivitiesListVisible] = useState(true);\n  // const [activitiesListVisible, setActivitiesListVisible] = useState(false);\n  const [currentActivity, setCurrentActivity] = useState(undefined);\n  // const [currentActivity, setCurrentActivity] = useState(\"AccountOverview\");\n  // const [currentActivity, setCurrentActivity] = useState(\"MakingPayments\");\n\n  const endCurrentActivity = () => {\n    setCurrentActivity(undefined);\n    setActivitiesListVisible(true);\n  };\n\n  const Activity = ({ currentActivity }) => {\n    let Act = AllActivities[currentActivity];\n    return Act ? (\n      <Act\n        endCurrentActivity={endCurrentActivity}\n        currentActivity={currentActivity}\n      />\n    ) : undefined;\n  };\n\n  return (\n    <PageContainer>\n      {currentActivity &&\n        Object.values(activitiesEnums).some((act) => act === currentActivity) &&\n        Activity({ currentActivity })}\n      {!currentActivity && activitiesListVisible ? (\n        <span />\n      ) : (\n        <AllActivitiesButton\n          onClick={() => {\n            if (currentActivity && activitiesListVisible) {\n              setActivitiesListVisible(false);\n            } else {\n              setActivitiesListVisible(true);\n            }\n            // setCurrentActivity(undefined);\n          }}\n        >\n          {currentActivity && activitiesListVisible\n            ? \"Back To Activity\"\n            : \"Show All Activities\"}\n        </AllActivitiesButton>\n      )}\n      <ActivityChooser\n        closeModal={() => {\n          setActivitiesListVisible(false);\n        }}\n        visible={activitiesListVisible}\n        setCurrentActivity={setCurrentActivity}\n      />\n    </PageContainer>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  font-family: 'Poppins', sans-serif; \n  font-family: 'Noto Sans', sans-serif;\n  margin: 0;\n}\n\nh2 {\n  margin: 0;\n}\n\n#layers {\n  z-index: 100;\n}\n`;\n\nconst AppExport = () => (\n  <ThemeProvider theme={theme}>\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>\n);\n\nexport default AppExport;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bank from './Bank';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Bank />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dark_flake.5fd7ece1.png\";","module.exports = __webpack_public_path__ + \"static/media/dark_flake_black.af5aad84.png\";","module.exports = __webpack_public_path__ + \"static/media/contract.12cf8c4f.png\";","module.exports = __webpack_public_path__ + \"static/media/piggy-bank.feb34bcb.png\";","module.exports = __webpack_public_path__ + \"static/media/exchange.d15b6ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.a5a3bfeb.png\";"],"sourceRoot":""}